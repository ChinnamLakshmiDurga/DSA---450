Sort an array of 0s, 1s and 2s 
Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.

Example 1:
Input: 
N = 5
arr[]= {0 2 1 2 0}
Output:
0 0 1 2 2
Explanation:
0s 1s and 2s are segregated into ascending order.

Approach-1:
Using DNF sort approach where we use 3 pointers and update the array.

Approach-2:
Using the STL sort function to sort the array.

void sort012(int a[], int n)
{
        int mid=0;
        int low=0;
        int high=n-1;
        while(mid<=high){
            if(a[mid]==0){
                swap(a[mid++],a[low++]);
            }
            else if(a[mid]==2){
                swap(a[mid],a[high--]);
            }
            else{
                mid++;
            }
        }
}
