Move all negative numbers to beginning and positive to end:
An array contains both positive and negative numbers in random order. Rearrange the array elements so that all negative numbers appear before all positive numbers.

Examples:
Input: -12, 11, -13, -5, 6, -7, 5, -3, -6
Output: -12 -13 -5 -7 -3 -6 11 6 5

Approach-1:
1. Using 2 poniter approach wherein we keep updating the array by sending negative elements to the left side.

Code:
void Move(int arr[], int n){
    int low=0;
    int mid=0;
    for(int i=0;i<n;i++){
        if(arr[i]<0){
            swap(arr[low++],arr[mid++]);
        }
        else{
            mid++;
        }
    }
}

Approach-2:
1. Initialize a variable as 0.
2. Traverse through the array and and if we encounetr a negative element then swap that negative element with arr[j] and increment j.

Code:
#include <iostream>
using namespace std;

int main()
{
   int arr[8]={0,2,-1,0,-2,-1,0,2};
   
   int j=0;
   for(int i=0;i<8;i++){
       if(arr[i]<0){
           swap(arr[i],arr[j++]);
       }
   }
   for(int i=0;i<8;i++){
       cout<<arr[i]<<" ";
   }
   return 0;
}
