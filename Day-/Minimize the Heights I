Minimize the Heights I:
Given an array arr[] denoting heights of N towers and a positive integer K, you have to modify the height of each tower either by increasing or decreasing them by K only once.
Find out what could be the possible minimum difference of the height of shortest and longest towers after you have modified each tower.
Note: Assume that height of the tower can be negative.

ight modification of the problem can be found here. 


Example 1:
Input:
K = 2, N = 4
Arr[] = {1, 5, 8, 10}
Output:
5
Explanation:
The array can be modified as {3, 3, 6, 8}. The difference between the largest and the smallest is 8-3 = 5.

Example 2:
Input:
K = 3, N = 5
Arr[] = {3, 9, 12, 16, 20}
Output:
11
Explanation:
The array can be modified as {6, 12, 9, 13, 17}. The difference between the largest and the smallest is 17-6 = 11.

Approach:
1. First we sort the array since we are focusing on the differnce between smallest and the tallest tower.
2. We can either decrease/increase K from each elements in such a way that we get the minimum difference.
Ex:
After sorting if array is:
a, b, c, d
Initially answer would be equal to (d-a) and we have to minimize it.
So,
Case - 1: Add k to the smallest and largest element i.e., 
             a+k and d+k so the answer is d+k-a-k which is again (d-a).
          So, It's not useful.
Case - 2: Subtract k to the smallest and largest element i.e., 
             a-k and d-k so the answer is d-k-a+k which is again (d-a).
          So, It's not useful.
Case - 3: Add k to the largest element and subtract k from the smallest element i.e.,
             a-k and d+k so the answer is d+k-a+k which is (d-a)+2k wherein its getting increased.
          So, It's not useful.
Case - 4: Add k to the smallest element and subtract k from the largest element i.e., 
             a+k and d-k so the answer is d-k-a-k which is (d-a)-2k wherein its getting DECREASED and this is what we want
          So, It's useful.
3. It is clear that minimum difference is obtained from the consecutive elements.
4. So, We traverse through the whole array and keep updating the min, max and answer values.

Code:
int getMinDiff(int arr[], int n, int k) {
        // sort the array
        sort(arr,arr+n);
        
        //Initial minimun and maximum to compute the min difference bewtween both
        int mini=arr[0];
        int maxi=arr[n-1];
        
        //Initial answer
        int ans=maxi-mini;
        
        //Modifying the array
        for(int i=1;i<n;i++){
            
            mini=min(arr[0]+k,arr[i]-k);
            maxi=max(arr[n-1]-k,arr[i-1]+k);
            
            ans=min(ans,maxi-mini);
        }
        return ans;
}
          
          
        
             
